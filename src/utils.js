import Board from '@sabaki/go-board';

/**
 * get the sign representing the color
 * @param {String} color black, white or undefined
 * @returns 1 for black, -1 for white, 0 for undefined
 */
export function colorToSign(color) {
    return (color === 'black' ? 1 : -1);
}

/**
 * get the color represented by the sign
 * @param {Integer} sign 1 or -1
 * @returns 1 => black, -1 => white
 */
export function signToColor(sign) {
    if (sign === 1) {
        return "black";
    } else {
        return 'white';
    }
}

/**
 * convert move vertex to String
 * @param {Array} vertex array of size 2 [3, 1]
 */
export function vertexToString(vertex) {
    if (vertex[0] === -1) {
        return 'pass';
    } else {
        return `[${vertex[0]}, ${vertex[1]}]`;
    }
}

/**
 * Generate an empty 2-d array filled with 0 to serve as starting signMap
 * @param {Integer} size Board size
 * @returns {Array} a 2-d array of size n*n filled with 0
 */
export function startMap(size) {
    return new Array(size).fill(0).map(() => new Array(size).fill(0));
}

/**
 * generate a marker map for marking the last move
 * @param {Integer} size size of the board
 * @param {Array} vertex size 2 array of integers representing last move vertex
 */
export function generateMarkerMap(size, vertex) {
    let O = { type: 'circle' };
    let ret = new Array(size).fill(null).map(() => new Array(size).fill(null));
    if (vertex[0] < 0 || vertex[1] < 0) {
        return ret;
    }
    ret[vertex[1]][vertex[0]] = O;
    return ret;
}

/**
 * Return the signMap of the board generated by Nth move from past moves
 * @param {Array} pastMoves array of moves that contain vertex and sign
 * @param {Integer} boardSize board size, normally 9, 13, 19
 * @param {Integer} nMoves currently view which move
 * @returns a signMap representing the board at nth move
 */
export const getCurrentBoard = (pastMoves, boardSize, nMoves) => {
    let board = new Board(startMap(boardSize));
    for (let move of pastMoves.slice(0, nMoves)) {
        board = board.makeMove(move.sign, move.vertex)
    }
    return board.signMap;
}