import Board from '@sabaki/go-board';

/**
 * get the sign representing the color
 * @param {String} color black, white or undefined
 * @returns 1 for black, -1 for white, 0 for undefined
 */
export function colorToSign(color) {
    return (color === 'black' ? 1 : -1);
}

/**
 * Generate an empty 2-d array filled with 0 to serve as starting signMap
 * @param {Integer} size Board size
 * @returns {Array} a 2-d array of size n*n filled with 0
 */
export function startMap(size) {
    return new Array(size).fill(0).map(() => new Array(size).fill(0));
}

/**
 * Return the signMap of the board generated by Nth move from past moves
 * @param {Array} pastMoves array of moves that contain vertex and sign
 * @param {Integer} boardSize board size, normally 9, 13, 19
 * @param {Integer} nMoves currently view which move
 * @returns a signMap representing the board at nth move
 */
export const getCurrentBoard = (pastMoves, boardSize, nMoves) => {
    let board = new Board(startMap(boardSize));
    for (let move of pastMoves.slice(0, nMoves)) {
        board = board.makeMove(move.sign, move.vertex)
    }
    return board.signMap;
}